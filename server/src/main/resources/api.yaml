openapi: 3.0.0
info:
  title: Api Documentation
  description: Api Documentation
  version: 1.0.0

servers:
  - url: http://localhost:8080

paths:

  #
  # User api
  #
  /api/current-user:
    get:
      operationId: getCurrentUser
      responses:
        200:
          description: Operation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDto'
        #401:
        422:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationExceptionDto'
      tags:
        - user

  /api/users:
    get:
      operationId: getUsers
      responses:
        200:
          description: Operation successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDto'
        #401:
        #403:
      tags:
        - user

  /api/users/{id}:
    delete:
      parameters:
        - $ref: '#/components/parameters/idPathParam'
      operationId: deleteUser
      responses:
        204:
          description: Operation successful
        #401:
        #403:
        #404:
      tags:
        - user

  #
  # Authentication api
  #
  /api/auth/login:
    post:
      operationId: login
      requestBody:
        description: User credentials
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentialsDto'
      responses:
        200:
          description: Operation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResultDto'
      tags:
        - authentication

  /api/auth/register:
    post:
      operationId: register
      requestBody:
        description: UserDto
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDto'
      responses:
        201:
          description: The new entity is created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdResponseDto'
        422:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationExceptionDto'
      tags:
        - authentication

  #
  #  CAFF api
  #
  /api/caff-files:
    post:
      operationId: createCaff
      requestBody:
        description: CaffFileDto
        required: true
        content:
          application/x-www-form-urlencoded;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/CaffFileDto'
      responses:
        201:
          description: The new entity is created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdResponseDto'
        #401:
        #403:
        422:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationExceptionDto'
      tags:
        - caff-file
    get:
      parameters:
        - name: title
          in: query
          schema:
            type: string
      operationId: searchCaffFile
      responses:
        200:
          description: Operation successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CaffSummaryDto'
      tags:
        - caff-file

  /api/caff-files/{id}:
    parameters:
      - $ref: '#/components/parameters/idPathParam'
    get:
      operationId: getCaffFile
      responses:
        200:
          description: Operation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaffDto'
        #401:
        #403:
        404:
          description: Not found
      tags:
        - caff-file
    delete:
      operationId: deleteCaffFile
      responses:
        204:
          description: Operation successful
        #401:
        #403:
        #404:
      tags:
        - caff-file
    put:
      operationId: updateCaffFile
      requestBody:
        description: CaffFileDto
        required: true
        content:
          application/x-www-form-urlencoded;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/CaffFileDto'
      responses:
        200:
          description: Operation successful
        #401:
        #403:
        #404:
      tags:
        - caff-file


  /api/caff-files/{id}/comments:
    parameters:
      - $ref: '#/components/parameters/idPathParam'
    post:
      operationId: createComment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
      responses:
        201:
          description: The new entity is created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdResponseDto'
        #401:
        #403:
        #404:
        422:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationExceptionDto'
      tags:
        - caff-file
    get:
      operationId: getComments
      responses:
        200:
          description: Operation successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommentDto'
      tags:
        - caff-file

  /api/caff-files/{id}/comments/{commentId}:
    parameters:
      - $ref: '#/components/parameters/idPathParam'
      - name: commentId
        in: path
        required: true
        schema:
          type: integer
          format: int64
    delete:
      operationId: deleteComment
      responses:
        204:
          description: Operation successful
        #401:
        #403:
        #404:
      tags:
        - caff-file

  /api/caff-files/{id}/participants:
    parameters:
      - $ref: '#/components/parameters/idPathParam'
    get:
      operationId: getParticipants
      responses:
        200:
          description: Operation successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ParticipantDto'
      tags:
        - caff-file

  /api/caff-files/{caffId}/{userId}/participants:
    parameters:
      - name: caffId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int64
    post:
      operationId: addParticipant
      responses:
        201:
          description: The new entity is created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdResponseDto'
        #401:
        #403:
        #404:
        422:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationExceptionDto'
      tags:
        - caff-file


  /api/caff-files/{id}/participants/{participantId}:
    parameters:
      - $ref: '#/components/parameters/idPathParam'
      - name: participantId
        in: path
        required: true
        schema:
          type: integer
          format: int64
    delete:
      operationId: deleteParticipant
      responses:
        204:
          description: Operation successful
        #401:
        #403:
        #404:
      tags:
        - caff-file


  /api/caff-files/{id}/purchase:
    post:
      parameters:
        - $ref: '#/components/parameters/idPathParam'
      operationId: purchaseCaffFile
      responses:
        200:
          description: Operation successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseTokenDto'
        #401:
        #403:
        #404:
      tags:
        - caff-file

  /api/caff-files/{id}/download:
    get:
      parameters:
        - $ref: '#/components/parameters/idPathParam'
        - name: token
          in: query
          required: true
          schema:
            type: string
      operationId: downloadCaffFile
      responses:
        200:
          description: Operation successful
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/Binary'
        #401:
        #403:
        #404:
      tags:
        - caff-file

components:
  parameters:
    idPathParam:
      name: id
      description: Identifier path parameter
      in: path
      required: true
      schema:
        type: integer
        format: int64

  schemas:

    Binary:
      type: string
      format: binary

    Byte:
      type: string
      format: byte

    IdResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64

    UserDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
        password:
          type: string
        bio:
          type: string
        role:
          type: string
      required:
        - email

    UserCredentialsDto:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password

    AuthResultDto:
      type: object
      properties:
        jwtToken:
          type: string

    CaffFileDto:
      type: object
      properties:
        title:
          type: string
        desc:
          type: string
        time:
          type: string
        wp:
          type: string
      required:
        - title
        - desc
        - time
        - wp

    CaffSummaryDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        wp:
          type: string
      required:
        - title

    CaffDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        uploader:
          type: string
        title:
          type: string
        desc:
          type: string
        time:
          type: string
        wp:
          type: string


    PurchaseTokenDto:
      type: object
      properties:
        token:
          type: string

    CommentDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        creator:
          type: string
        createdDate:
          type: string
          format: date-time
        content:
          type: string
        caff:
          $ref: '#/components/schemas/CaffDto'

    ParticipantDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        creator:
          type: string
        participant:
          $ref: '#/components/schemas/UserDto'
        caff:
          $ref: '#/components/schemas/CaffDto'

    ValidationExceptionDto:
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ValidationErrorDto'

    ValidationErrorDto:
      properties:
        messageKey:
          type: string
        params:
          type: object
          additionalProperties:
            type: string

    Authority:
      type: string
      enum:
        - VIEW_CAFF
        - DOWNLOAD_CAFF
        - UPLOAD_CAFF
        - DELETE_CAFF
        - MODIFY_CAFF
        - PAYMENT
        - SEARCH_CAFF
        - WRITE_NOTE
        - DELETE_NOTE
        - VIEW_USER
        - DELETE_USER
